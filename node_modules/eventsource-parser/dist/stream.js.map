{"version":3,"file":"stream.js","sources":["../src/stream.ts"],"sourcesContent":["import {createParser} from './parse.js'\nimport type {EventSourceParser, ParsedEvent} from './types.js'\n\n/**\n * A TransformStream that ingests a stream of strings and produces a stream of ParsedEvents.\n *\n * @example\n * ```\n * const eventStream =\n *   response.body\n *     .pipeThrough(new TextDecoderStream())\n *     .pipeThrough(new EventSourceParserStream())\n * ```\n * @public\n */\nexport class EventSourceParserStream extends TransformStream<string, ParsedEvent> {\n  constructor() {\n    let parser!: EventSourceParser\n\n    super({\n      start(controller) {\n        parser = createParser((event) => {\n          if (event.type === 'event') {\n            controller.enqueue(event)\n          }\n        })\n      },\n      transform(chunk) {\n        parser.feed(chunk)\n      },\n    })\n  }\n}\n\nexport type {ParsedEvent} from './types.js'\n"],"names":[],"mappings":";AAeO,MAAM,gCAAgC,gBAAqC;AAAA,EAChF,cAAc;AACR,QAAA;AAEE,UAAA;AAAA,MACJ,MAAM,YAAY;AACP,iBAAA,aAAa,CAAC,UAAU;AAC3B,gBAAM,SAAS,WACjB,WAAW,QAAQ,KAAK;AAAA,QAAA,CAE3B;AAAA,MACH;AAAA,MACA,UAAU,OAAO;AACf,eAAO,KAAK,KAAK;AAAA,MACnB;AAAA,IAAA,CACD;AAAA,EACH;AACF;"}